1.找到字符串中的所有字母异位词
哈希表相同的条件是完全相同，即使有一个键的值为0，这个键依然存在。
例如{(1,0),(2,1)}是不等价于{((2,1))}的，所以当键对应的值为0的时候应当erase掉
或者使用数组代替哈希表也可以
2.和为k的子数组
前缀和的定义，实现不熟悉，前缀和定义preSum[i]前i个元素的和
即preSum[i] = preSum[i-1]+nums[i-1]
3.最小覆盖子串
窗口左端点的定义，这里不是定长，所以left不能在循环内循环定义为固定长度窗口的左端点
应该在循环外定义，在答案的获取中substr会拷贝一份字符串，循环拷贝一个很长的字符串极有可能
内存溢出，这里用ansLeft和ansRight表示，在更新答案的时候通过当前窗口的左右断点距离和答案左右端点距离进行比较
在判断子串是否覆盖的函数中，应该遍历目标字符串，如果遍历长的字符串，有可能会遍历到目标字符串中没有的字符。
4.最大子数组和
动态规划的思想，每一步都是最优的，连续或者不连续中取最优值,动态规划题目要有一种分类的思想
5.轮转数组
reverse函数，以及对轮转数组的理解，三次反转=一次轮转，全部反转，轮转部分反转，非轮转部分轮转
6.缺失的第一个整数
换座位思想
7.螺旋矩阵
没有考虑完整方向改变的所有情况，方向和当前元素的改变是本题的重点
8.旋转图像
旋转 = 转置 + 行反转
9.非hot100题目，仅是对三目运算符巩固练习
int a, b, max;
if (a > b) {
    max = a;
} else {
    max = b;
}
ans: max = a > b ? a : b

int score;
char grade;
if (score >= 90) {
    grade = 'A';
} else if (score >= 60) {
    grade = 'B';
} else {
    grade = 'C';
}
ans:grade = score >= 90 ? 'A' : (score >= 60 ? 'B' : 'C');
///////////////////////////////////////////
///////////////////////////////////////////
///////////////////////////////////////////
链表题切记将无用的临时节点删除，回收资源，避免出现资源泄漏
///////////////////////////////////////////
///////////////////////////////////////////
///////////////////////////////////////////
10.回文链表
复用反转链表和链表的中间节点算法，双指针遍历链表判断对应的值是否是相同的
错的点在于，循环条件应该是负责后半链表的指针A是否为空。而不是前半链表的遍历指针B，
因为B一定比A能遍历的点多。
11.环形链表
环形链表需要判断的是不是同一个节点而非值，即会收到相同值的影响也会收到空指针的影响报错
12.环形链表Ⅱ
环形链表的基础上，找出入口点，通过画图得到等式是关键。
13.删除链表的倒数第N个结点
快慢指针的用法生疏，太长时间没有接触快慢指针了。但凡涉及删除节点，就想快慢指针。
其次没做出来的原因没有想到快慢指针始终保持n步的距离，以及删除头节点的这一个特殊
情况没有考虑全。所以没有想到用哨兵节点

